{"ast":null,"code":"import { PostsService } from \"@/services/PostsService\";\nexport default {\n  name: \"PostUpdate\",\n  props: {\n    revealPostUpdate: Boolean,\n    togglePostUpdate: Function,\n    postId: Number\n  },\n\n  data() {\n    return {\n      post: {\n        id: null,\n        content: \"\",\n        mediaUrl: null\n      },\n      imageBase64url: \"\",\n      imageFile: null\n    };\n  },\n\n  mounted() {\n    PostsService.getSinglePost(this.postId).then(res => {\n      this.post = res.data.data;\n    }).catch(err => console.log(err));\n  },\n\n  methods: {\n    setBase64urlImage(e) {\n      this.imageFile = e.target.files[0];\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(this.imageFile);\n      fileReader.addEventListener(\"load\", () => {\n        this.imageBase64url = fileReader.result;\n      });\n    },\n\n    async editPost() {\n      try {\n        const formData = new FormData();\n\n        if (this.imageFile) {\n          formData.append(\"image\", this.imageFile);\n        }\n\n        formData.append(\"content\", this.post.content);\n        const postId = this.post.id;\n        const result = await PostsService.editPost(postId, formData);\n        this.$emit(\"postUpdated\", result.data.updatedPost);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAqDA,SAASA,YAAT,QAA6B,yBAA7B;AAEA,eAAe;EACbC,IAAI,EAAE,YADO;EAEbC,KAAK,EAAE;IACLC,gBAAgB,EAAEC,OADb;IAELC,gBAAgB,EAAEC,QAFb;IAGLC,MAAM,EAAEC;EAHH,CAFM;;EAObC,IAAI,GAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,EAAE,EAAE,IADA;QAEJC,OAAO,EAAE,EAFL;QAGJC,QAAQ,EAAE;MAHN,CADD;MAMLC,cAAc,EAAE,EANX;MAOLC,SAAS,EAAE;IAPN,CAAP;EASD,CAjBY;;EAkBbC,OAAO,GAAG;IACRhB,YAAY,CAACiB,aAAb,CAA2B,KAAKV,MAAhC,EACGW,IADH,CACSC,GAAD,IAAS;MACb,KAAKT,IAAL,GAAYS,GAAG,CAACV,IAAJ,CAASA,IAArB;IACD,CAHH,EAIGW,KAJH,CAIUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJlB;EAKD,CAxBY;;EAyBbG,OAAO,EAAE;IACPC,iBAAiB,CAACC,CAAD,EAAI;MACnB,KAAKX,SAAL,GAAiBW,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAjB;MACA,MAAMC,UAAS,GAAI,IAAIC,UAAJ,EAAnB;MACAD,UAAU,CAACE,aAAX,CAAyB,KAAKhB,SAA9B;MACAc,UAAU,CAACG,gBAAX,CAA4B,MAA5B,EAAoC,MAAM;QACxC,KAAKlB,cAAL,GAAsBe,UAAU,CAACI,MAAjC;MACD,CAFD;IAGD,CARM;;IASP,MAAMC,QAAN,GAAiB;MACf,IAAI;QACF,MAAMC,QAAO,GAAI,IAAIC,QAAJ,EAAjB;;QACA,IAAI,KAAKrB,SAAT,EAAoB;UAClBoB,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB,KAAKtB,SAA9B;QACF;;QACAoB,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,KAAK3B,IAAL,CAAUE,OAArC;QACA,MAAML,MAAK,GAAI,KAAKG,IAAL,CAAUC,EAAzB;QACA,MAAMsB,MAAK,GAAI,MAAMjC,YAAY,CAACkC,QAAb,CAAsB3B,MAAtB,EAA8B4B,QAA9B,CAArB;QACA,KAAKG,KAAL,CAAW,aAAX,EAA0BL,MAAM,CAACxB,IAAP,CAAY8B,WAAtC;MACF,CATA,CASE,OAAOlB,GAAP,EAAY;QACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACF;IACD;;EAtBM;AAzBI,CAAf","names":["PostsService","name","props","revealPostUpdate","Boolean","togglePostUpdate","Function","postId","Number","data","post","id","content","mediaUrl","imageBase64url","imageFile","mounted","getSinglePost","then","res","catch","err","console","log","methods","setBase64urlImage","e","target","files","fileReader","FileReader","readAsDataURL","addEventListener","result","editPost","formData","FormData","append","$emit","updatedPost"],"sourceRoot":"","sources":["/Users/clementstorne/Google Drive/OpenClassrooms/Dev-web/P7/groupomania-code/front/src/components/PostUpdate.vue"],"sourcesContent":["<template>\n  <div class=\"post-update\" v-if=\"revealPostUpdate\">\n    <div class=\"post-update-overlay\" @click=\"togglePostUpdate\"></div>\n    <div class=\"post-update-card card px-1 pt-5 pb-2 px-md-5 mb-md-5\">\n      <div class=\"post-update-btn btn\" @click=\"togglePostUpdate\">‚úñÔ∏è</div>\n      <div class=\"post-update-content ms-2 me-2\">\n        <textarea\n          class=\"post-update-textarea\"\n          :placeholder=\"`Quoi de neuf ?`\"\n          v-model=\"post.content\"\n          style=\"height: 100px\"\n          id=\"post_content\"\n        ></textarea>\n        <img :src=\"imageBase64url\" alt=\"\" v-if=\"imageBase64url\" class=\"mt-3\" />\n        <img\n          :src=\"post.mediaUrl\"\n          alt=\"\"\n          v-else-if=\"post.mediaUrl\"\n          class=\"post-img\"\n        />\n      </div>\n      <div\n        class=\"post-update-buttons row d-flex flex-column align-items-between flex-md-row justify-content-start align-items-md-start py-2\"\n      >\n        <div\n          class=\"post-update-buttons-picture col-12 col-md-6 d-grid mb-2 p-0\"\n        >\n          <input\n            type=\"file\"\n            name=\"image\"\n            id=\"media\"\n            accept=\"image/png, image/jpg, image/jpeg, image/gif\"\n            class=\"post-update-buttons-picture-btn-input\"\n            @change=\"setBase64urlImage\"\n          />\n          <button class=\"btn btn-secondary mx-1\" v-if=\"this.post.mediaUrl\">\n            <label for=\"media\">üì∑ Modifier la photo</label>\n          </button>\n          <button class=\"btn btn-secondary mx-1\" v-else>\n            <label for=\"media\">üì∑ Ajouter une photo</label>\n          </button>\n        </div>\n        <div class=\"post-update-buttons-btn col-12 col-md-6 d-grid mb-2 p-0\">\n          <button class=\"btn btn-primary mx-1\" @click=\"editPost\">\n            Modifier le post\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { PostsService } from \"@/services/PostsService\";\n\nexport default {\n  name: \"PostUpdate\",\n  props: {\n    revealPostUpdate: Boolean,\n    togglePostUpdate: Function,\n    postId: Number,\n  },\n  data() {\n    return {\n      post: {\n        id: null,\n        content: \"\",\n        mediaUrl: null,\n      },\n      imageBase64url: \"\",\n      imageFile: null,\n    };\n  },\n  mounted() {\n    PostsService.getSinglePost(this.postId)\n      .then((res) => {\n        this.post = res.data.data;\n      })\n      .catch((err) => console.log(err));\n  },\n  methods: {\n    setBase64urlImage(e) {\n      this.imageFile = e.target.files[0];\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(this.imageFile);\n      fileReader.addEventListener(\"load\", () => {\n        this.imageBase64url = fileReader.result;\n      });\n    },\n    async editPost() {\n      try {\n        const formData = new FormData();\n        if (this.imageFile) {\n          formData.append(\"image\", this.imageFile);\n        }\n        formData.append(\"content\", this.post.content);\n        const postId = this.post.id;\n        const result = await PostsService.editPost(postId, formData);\n        this.$emit(\"postUpdated\", result.data.updatedPost);\n      } catch (err) {\n        console.log(err);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.post-update {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: 700;\n  font-size: 16px;\n  &-overlay {\n    background: rgba(0, 0, 0, 0.5);\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n  &-card {\n    border-left: 8px solid $color-primary;\n    width: 90%;\n    border-radius: 8px;\n  }\n  &-btn {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    border-radius: 8px;\n  }\n  &-text {\n    text-align: center;\n  }\n  &-content {\n    text-align: center;\n    & img {\n      max-width: 100%;\n    }\n  }\n  &-textarea {\n    border-radius: 16px;\n    padding: 8px 16px;\n    background: $gray;\n    border: none;\n    resize: none;\n    width: 100%;\n    &:focus {\n      box-shadow: 0px 0px 0px 4px rgba($color-primary, 0.5);\n      outline: none;\n    }\n  }\n  &-buttons {\n    color: $dark-gray;\n    font-weight: 600;\n    align-items: center;\n    margin: 0;\n    &-picture {\n      position: relative;\n      overflow: hidden;\n      &:hover {\n        color: $color-primary;\n        font-weight: 900;\n        cursor: pointer;\n      }\n      &-btn-input {\n        position: absolute;\n        font-size: 50px;\n        opacity: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        left: 0;\n      }\n      & p {\n        margin-bottom: 0;\n      }\n    }\n  }\n}\n.btn {\n  font-weight: 700;\n  font-size: 16px;\n  border-radius: 8px;\n  border: none;\n  &-primary {\n    background: $color-primary;\n    &:hover {\n      background: darken($color-primary, 5%);\n    }\n    &:focus {\n      background: darken($color-primary, 5%);\n      box-shadow: 0px 0px 0px 4px rgba($color-primary, 0.5);\n      outline: none;\n    }\n  }\n  &-secondary {\n    background: $color-tertiary;\n    &:hover {\n      background: darken($color-tertiary, 5%);\n    }\n    &:focus {\n      background: darken($color-tertiary, 5%);\n      box-shadow: 0px 0px 0px 4px rgba($color-tertiary, 0.5);\n      outline: none;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}