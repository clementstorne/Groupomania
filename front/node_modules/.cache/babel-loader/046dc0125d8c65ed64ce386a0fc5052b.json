{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1e6a8102\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"alert-block\"\n};\nconst _hoisted_2 = {\n  class: \"alert-block-card card px-1 pt-5 pb-2 col-11 px-md-5 mb-md-5 col-md-10\"\n};\nconst _hoisted_3 = {\n  class: \"alert-block-text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.revealAlert ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"alert-block-overlay\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $props.toggleAlert && $props.toggleAlert(...args))\n  }), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: \"alert-block-btn btn\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $props.toggleAlert && $props.toggleAlert(...args))\n  }, \"✖️\"), _createElementVNode(\"p\", _hoisted_3, _toDisplayString($props.messageAlert), 1\n  /* TEXT */\n  )])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;;;EACOA,KAAK,EAAC;;;EAGPA,KAAK,EAAC;;;EAGHA,KAAK,EAAC;;;SANkBC,oCAA/BC,oBAUM,KAVN,cAUM,CATJC,oBAA4D,KAA5D,EAA4D;IAAvDH,KAAK,EAAC,qBAAiD;IAA1BI,OAAK,yCAAEH,iDAAF;EAAqB,CAA5D,CASI,EARJE,oBAOM,KAPN,cAOM,CAJJA,oBAA8D,KAA9D,EAA8D;IAAzDH,KAAK,EAAC,qBAAmD;IAA5BI,OAAK,yCAAEH,iDAAF;EAAuB,CAA9D,EAAsD,IAAtD,CAII,EAHJE,oBAEI,GAFJ,cAEIE,iBADCJ,mBACD,CAFJ,EACiB;EAAA;EADjB,CAGI,CAPN,CAQI,CAVN","names":["class","$props","_createElementBlock","_createElementVNode","onClick","_toDisplayString"],"sourceRoot":"","sources":["/Users/clementstorne/Google Drive/OpenClassrooms/Dev-web/P7/groupomania-code/front/src/components/BlockAlert.vue"],"sourcesContent":["<template>\n  <div class=\"alert-block\" v-if=\"revealAlert\">\n    <div class=\"alert-block-overlay\" @click=\"toggleAlert\"></div>\n    <div\n      class=\"alert-block-card card px-1 pt-5 pb-2 col-11 px-md-5 mb-md-5 col-md-10\"\n    >\n      <div class=\"alert-block-btn btn\" @click=\"toggleAlert\">✖️</div>\n      <p class=\"alert-block-text\">\n        {{ messageAlert }}\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"BockAlert\",\n  props: {\n    revealAlert: Boolean,\n    toggleAlert: Function,\n    messageAlert: String,\n  },\n  data() {\n    return {};\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.alert-block {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: 700;\n  font-size: 16px;\n  &-overlay {\n    background: rgba(0, 0, 0, 0.5);\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n  &-card {\n    border-left: 8px solid $color-primary;\n    border-radius: 8px;\n  }\n  &-btn {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    border-radius: 8px;\n  }\n  &-text {\n    text-align: center;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}