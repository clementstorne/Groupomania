{"ast":null,"code":"import PostShow from \"@/components/PostShow.vue\";\nimport PostShare from \"../components/PostShare.vue\";\nimport { UsersService } from \"@/services/UsersService\";\nimport { PostsService } from \"@/services/PostsService\";\nexport default {\n  name: \"HomeView\",\n  components: {\n    PostShow,\n    PostShare\n  },\n\n  data() {\n    return {\n      posts: [],\n      user: {\n        id: 0,\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        password: \"\",\n        imageUrl: \"\"\n      },\n      isThisPostNew: false,\n      newPost: {\n        id: null,\n        userId: null,\n        firstname: null,\n        lastname: null,\n        createdAt: null,\n        updatedAt: null,\n        imageUrl: null,\n        content: null,\n        mediaUrl: null,\n        likes: 0,\n        usersWhoLiked: [],\n        dislikes: 0,\n        usersWhoDisliked: []\n      }\n    };\n  },\n\n  beforeMount() {\n    UsersService.getUserData().then(res => {\n      this.user = res.data.data;\n    }).catch(err => console.log(err));\n  },\n\n  mounted() {\n    PostsService.getAllPosts().then(res => {\n      this.posts = res.data.data;\n    }).catch(err => console.log(err));\n  },\n\n  methods: {\n    newPostWasPublished($event) {\n      this.isThisPostNew = true;\n      this.newPost.id = $event.id;\n      this.newPost.userId = $event.UserId;\n      this.newPost.firstname = this.user.firstname;\n      this.newPost.lastname = this.user.lastname;\n      this.newPost.createdAt = $event.createdAt;\n      this.newPost.updatedAt = $event.updatedAt;\n      this.newPost.imageUrl = this.user.imageUrl;\n      this.newPost.content = $event.content;\n      this.newPost.mediaUrl = $event.mediaUrl;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA0CA,OAAOA,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AAEA,eAAe;EACbC,IAAI,EAAE,UADO;EAEbC,UAAU,EAAE;IACVL,QADU;IAEVC;EAFU,CAFC;;EAMbK,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,EADF;MAELC,IAAI,EAAE;QACJC,EAAE,EAAE,CADA;QAEJC,SAAS,EAAE,EAFP;QAGJC,QAAQ,EAAE,EAHN;QAIJC,KAAK,EAAE,EAJH;QAKJC,QAAQ,EAAE,EALN;QAMJC,QAAQ,EAAE;MANN,CAFD;MAULC,aAAa,EAAE,KAVV;MAWLC,OAAO,EAAE;QACPP,EAAE,EAAE,IADG;QAEPQ,MAAM,EAAE,IAFD;QAGPP,SAAS,EAAE,IAHJ;QAIPC,QAAQ,EAAE,IAJH;QAKPO,SAAS,EAAE,IALJ;QAMPC,SAAS,EAAE,IANJ;QAOPL,QAAQ,EAAE,IAPH;QAQPM,OAAO,EAAE,IARF;QASPC,QAAQ,EAAE,IATH;QAUPC,KAAK,EAAE,CAVA;QAWPC,aAAa,EAAE,EAXR;QAYPC,QAAQ,EAAE,CAZH;QAaPC,gBAAgB,EAAE;MAbX;IAXJ,CAAP;EA2BD,CAlCY;;EAmCbC,WAAW,GAAG;IACZxB,YAAY,CAACyB,WAAb,GACGC,IADH,CACSC,GAAD,IAAS;MACb,KAAKrB,IAAL,GAAYqB,GAAG,CAACvB,IAAJ,CAASA,IAArB;IACD,CAHH,EAIGwB,KAJH,CAIUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJlB;EAKD,CAzCY;;EA0CbG,OAAO,GAAG;IACR/B,YAAY,CAACgC,WAAb,GACGP,IADH,CACSC,GAAD,IAAS;MACb,KAAKtB,KAAL,GAAasB,GAAG,CAACvB,IAAJ,CAASA,IAAtB;IACD,CAHH,EAIGwB,KAJH,CAIUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJlB;EAKD,CAhDY;;EAiDbK,OAAO,EAAE;IACPC,mBAAmB,CAACC,MAAD,EAAS;MAC1B,KAAKvB,aAAL,GAAqB,IAArB;MACA,KAAKC,OAAL,CAAaP,EAAb,GAAkB6B,MAAM,CAAC7B,EAAzB;MACA,KAAKO,OAAL,CAAaC,MAAb,GAAsBqB,MAAM,CAACC,MAA7B;MACA,KAAKvB,OAAL,CAAaN,SAAb,GAAyB,KAAKF,IAAL,CAAUE,SAAnC;MACA,KAAKM,OAAL,CAAaL,QAAb,GAAwB,KAAKH,IAAL,CAAUG,QAAlC;MACA,KAAKK,OAAL,CAAaE,SAAb,GAAyBoB,MAAM,CAACpB,SAAhC;MACA,KAAKF,OAAL,CAAaG,SAAb,GAAyBmB,MAAM,CAACnB,SAAhC;MACA,KAAKH,OAAL,CAAaF,QAAb,GAAwB,KAAKN,IAAL,CAAUM,QAAlC;MACA,KAAKE,OAAL,CAAaI,OAAb,GAAuBkB,MAAM,CAAClB,OAA9B;MACA,KAAKJ,OAAL,CAAaK,QAAb,GAAwBiB,MAAM,CAACjB,QAA/B;IACD;;EAZM;AAjDI,CAAf","names":["PostShow","PostShare","UsersService","PostsService","name","components","data","posts","user","id","firstname","lastname","email","password","imageUrl","isThisPostNew","newPost","userId","createdAt","updatedAt","content","mediaUrl","likes","usersWhoLiked","dislikes","usersWhoDisliked","beforeMount","getUserData","then","res","catch","err","console","log","mounted","getAllPosts","methods","newPostWasPublished","$event","UserId"],"sourceRoot":"","sources":["/Users/clementstorne/Google Drive/OpenClassrooms/Dev-web/P7/groupomania-code/front/src/views/Home.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"mx-2\">\n      <PostShare v-on:newPostPublished=\"newPostWasPublished\" />\n      <PostShow\n        v-if=\"isThisPostNew\"\n        :id=\"newPost.id\"\n        :user-id=\"newPost.userId\"\n        :firstname=\"newPost.firstname\"\n        :lastname=\"newPost.lastname\"\n        :created-at=\"newPost.createdAt\"\n        :updated-at=\"newPost.updatedAt\"\n        :image-url=\"newPost.imageUrl\"\n        :content=\"newPost.content\"\n        :media-url=\"newPost.mediaUrl\"\n        :likes=\"newPost.likes\"\n        :users-who-liked=\"newPost.usersWhoLiked\"\n        :dislikes=\"newPost.dislikes\"\n        :users-who-disliked=\"newPost.usersWhoDisliked\"\n      />\n      <PostShow\n        v-for=\"post in posts\"\n        :key=\"post.id\"\n        :id=\"post.id\"\n        :user-id=\"post.userId\"\n        :firstname=\"post.User.firstname\"\n        :lastname=\"post.User.lastname\"\n        :created-at=\"post.createdAt\"\n        :updated-at=\"post.updatedAt\"\n        :image-url=\"post.User.imageUrl\"\n        :content=\"post.content\"\n        :media-url=\"post.mediaUrl\"\n        :likes=\"post.Likes.length\"\n        :users-who-liked=\"post.Likes\"\n        :dislikes=\"post.Dislikes.length\"\n        :users-who-disliked=\"post.Dislikes\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport PostShow from \"@/components/PostShow.vue\";\nimport PostShare from \"../components/PostShare.vue\";\n\nimport { UsersService } from \"@/services/UsersService\";\nimport { PostsService } from \"@/services/PostsService\";\n\nexport default {\n  name: \"HomeView\",\n  components: {\n    PostShow,\n    PostShare,\n  },\n  data() {\n    return {\n      posts: [],\n      user: {\n        id: 0,\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        password: \"\",\n        imageUrl: \"\",\n      },\n      isThisPostNew: false,\n      newPost: {\n        id: null,\n        userId: null,\n        firstname: null,\n        lastname: null,\n        createdAt: null,\n        updatedAt: null,\n        imageUrl: null,\n        content: null,\n        mediaUrl: null,\n        likes: 0,\n        usersWhoLiked: [],\n        dislikes: 0,\n        usersWhoDisliked: [],\n      },\n    };\n  },\n  beforeMount() {\n    UsersService.getUserData()\n      .then((res) => {\n        this.user = res.data.data;\n      })\n      .catch((err) => console.log(err));\n  },\n  mounted() {\n    PostsService.getAllPosts()\n      .then((res) => {\n        this.posts = res.data.data;\n      })\n      .catch((err) => console.log(err));\n  },\n  methods: {\n    newPostWasPublished($event) {\n      this.isThisPostNew = true;\n      this.newPost.id = $event.id;\n      this.newPost.userId = $event.UserId;\n      this.newPost.firstname = this.user.firstname;\n      this.newPost.lastname = this.user.lastname;\n      this.newPost.createdAt = $event.createdAt;\n      this.newPost.updatedAt = $event.updatedAt;\n      this.newPost.imageUrl = this.user.imageUrl;\n      this.newPost.content = $event.content;\n      this.newPost.mediaUrl = $event.mediaUrl;\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.home {\n  min-height: calc(100vh - 91.2px);\n  background: #f0f2f5;\n  margin-top: 72px;\n  padding: 10px 0;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}